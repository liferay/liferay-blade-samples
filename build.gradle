FileTree bndtoolsOutputFiles = fileTree(dir: 'bndtools/', include: '**/dist/bundles/**/*.jar', exclude: '**/*latest.jar')
FileTree gradleOutputFiles = fileTree(dir: 'gradle/', include: '**/libs/*.jar')
FileTree liferayGradleOutputFiles = fileTree(dir: 'liferay-gradle/', include: '**/libs/*.jar')
FileTree mavenOutputFiles = fileTree(dir: 'maven/', include: '**/target/*.jar')

int canonicalSize = liferayGradleOutputFiles.size()

task outputFilesSizeTest << {
	assert canonicalSize == bndtoolsOutputFiles.size()
	assert canonicalSize == gradleOutputFiles.size()
	assert canonicalSize == mavenOutputFiles.size()
}

task outputFilesSortTest << {
	def fileNamesDiff = liferayGradleOutputFiles.files.name.sort() - bndtoolsOutputFiles.files.name.sort()
	assert [] == fileNamesDiff : "liferay-gradle vs bndtools"

	fileNamesDiff = liferayGradleOutputFiles.files.name.sort() - gradleOutputFiles.files.name.sort()
	assert [] == fileNamesDiff : "liferay-gradle vs gradle"

	fileNamesDiff = liferayGradleOutputFiles.files.name.sort() - mavenOutputFiles.files.name.sort()
	assert [] == fileNamesDiff : "liferay-gradle vs maven"
}

task outputFilesTest(dependsOn: [outputFilesSizeTest, outputFilesSortTest]) << {}

task replicateSources << {
	Closure projectFilter = { it.isDirectory() && !it.name.matches("\\..*") }

	def canonicalProjects = file('liferay-gradle').listFiles().findAll(projectFilter)

	def replicationParents = files('bndtools', 'gradle', 'maven')

	canonicalProjects.each { canonicalProject ->
		replicationParents.each { replicationParent ->
			def replicationProjects = replicationParent.listFiles().findAll(projectFilter)

			def replicationProject = replicationProjects.find{ it.name == canonicalProject.name }

			def replicationSrc = new File( replicationProject, 'src/' )

			replicationSrc.deleteDir()

			def canonicalSrc = new File( canonicalProject, 'src/' )

			ant.copy(todir: replicationSrc) {
				fileset(dir: canonicalSrc, includes: "**")
			}
		}
	}
}

configurations {
	bnd
}

dependencies {
	bnd group: "biz.aQute.bnd", name: "biz.aQute.bnd", version: "3.1.0"
}

repositories {
	mavenCentral()
}

task diff << {
	[bndtoolsOutputFiles, gradleOutputFiles, mavenOutputFiles].each { replicationFiles ->
		println "${replicationFiles}"
		println "${replicationFiles}"
		println "${replicationFiles}"
		println "${replicationFiles}"

		replicationFiles.each { replicationFile ->

			println ""
			println ""
			println replicationFile.name
			println "*******************************************************"

			def liferayGradleOutputFile = liferayGradleOutputFiles.find {
				it.name == replicationFile.name
			}

			String exclusions = "Archiver-Version, Javac-Debug, Javac-Deprecation, Javac-Encoding, Built-By, Build-Jdk, *pom.properties, *pom.xml"

			javaexec {
				args "diff", "-i", "${exclusions}", liferayGradleOutputFile, replicationFile

				classpath = configurations.bnd
				main = "aQute.bnd.main.bnd"
			}

		}
	}
}